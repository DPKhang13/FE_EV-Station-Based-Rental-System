// pages/ThanhToanPage.jsx
import React, { useState, useEffect } from "react";
import transactionService from "../services/transactionService";
import "./ThanhToanPage.css";

// ƒê·ªãnh d·∫°ng ti·ªÅn VND
const formatVND = (n) =>
  Number(n ?? 0).toLocaleString("vi-VN", {
    style: "currency",
    currency: "VND",
  });

// üî§ D·ªãch tr·∫°ng th√°i sang ti·∫øng Vi·ªát
const translateStatus = (status) => {
  switch ((status || "").toUpperCase()) {
    case "SUCCESS":
      return "Th√†nh c√¥ng";
    case "FAILED":
      return "Th·∫•t b·∫°i";
    case "PENDING":
      return "ƒêang x·ª≠ l√Ω";
    default:
      return "Kh√¥ng x√°c ƒë·ªãnh";
  }
};

// üî§ D·ªãch lo·∫°i giao d·ªãch sang ti·∫øng Vi·ªát
const translateType = (type) => {
  switch ((type || "").toUpperCase()) {
    case "DEPOSIT":
      return "ƒê√£ c·ªçc ti·ªÅn";
    case "WITHDRAW":
      return "R√∫t ti·ªÅn";
    case "RENTAL_PAYMENT":
      return "Thanh to√°n thu√™ xe";
    case "REFUND":
      return "Ho√†n ti·ªÅn";
    case "TOP_UP":
      return "N·∫°p t√†i kho·∫£n";
    default:
      return "Kh√°c";
  }
};

const ThanhToanPage = () => {
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");
  const [phone, setPhone] = useState("");

  useEffect(() => {
    getAllTransactions();
  }, []);

  const getAllTransactions = async () => {
    setLoading(true);
    try {
      const res = await transactionService.getAllTransactions();
      const arr = Array.isArray(res?.data)
        ? res.data
        : Array.isArray(res)
        ? res
        : [];
      setTransactions(arr);
    } catch (err) {
      console.error("‚ùå L·ªói t·∫£i giao d·ªãch:", err);
      setTransactions([]);
    } finally {
      setLoading(false);
    }
  };

  const handleSearch = async () => {
    if (!phone.trim()) {
      setError("Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i kh√°ch h√†ng!");
      return;
    }
    setError("");
    setLoading(true);
    try {
      const res = await transactionService.searchByUserId(phone);
      setTransactions(Array.isArray(res) ? res : []);
    } catch (err) {
      console.error(err);
      setError(err?.message || "Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu giao d·ªãch!");
      setTransactions([]);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="page-container">
      <div className="search-box">
        <h2>Tra c·ª©u l·ªãch s·ª≠ giao d·ªãch</h2>
        <div className="search-form">
          <input
            type="text"
            placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i kh√°ch h√†ng"
            value={phone}
            onChange={(e) => setPhone(e.target.value)}
          />
          <button onClick={handleSearch} disabled={loading}>
            {loading ? "ƒêang t√¨m..." : "T√¨m ki·∫øm"}
          </button>
        </div>
        {error && <p className="error">{error}</p>}
      </div>

      {loading && <p className="loading">ƒêang t·∫£i d·ªØ li·ªáu...</p>}

      <table className="transaction-table">
        <thead>
          <tr>
            <th>M√£ giao d·ªãch</th>
            <th>S·ªë ti·ªÅn</th>
            <th>Tr·∫°ng th√°i</th>
            <th>Lo·∫°i</th>
            <th>Th·ªùi gian</th>
          </tr>
        </thead>
        <tbody>
          {transactions.length > 0 ? (
            transactions.map((t) => (
              <tr key={t.transactionId}>
                <td>{t.transactionId}</td>
                <td>{formatVND(t.amount)}</td>
                <td className={`status ${(t?.status || "").toLowerCase()}`}>
                  {translateStatus(t.status)}
                </td>
                <td>{translateType(t.type)}</td>
                <td>
                  {t?.createdAt
                    ? new Date(t.createdAt).toLocaleString("vi-VN", {
                        hour12: false,
                      })
                    : "-"}
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan={5} className="no-data-cell">
                Kh√¥ng c√≥ d·ªØ li·ªáu giao d·ªãch.
              </td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
};

export default ThanhToanPage;
